name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # -------------------------------
  # CI: Only EC2 connectivity test
  # -------------------------------
  test:
    name: Test EC2 Connectivity
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          known_hosts: "just-a-placeholder-so-we-dont-get-warnings"

      - name: Verify EC2 Access
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ./deploy_key.pem
          chmod 400 ./deploy_key.pem
          ssh -i ./deploy_key.pem \
              -o StrictHostKeyChecking=no \
              ${{ secrets.EC2_USER }}@${{ secrets.EC2_INSTANCE_IP }} \
              "echo 'EC2 connection successful!'"

  # -------------------------------
  # CD: Deploy (Unchanged)
  # -------------------------------
  deploy:
    name: Deploy to EC2
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          known_hosts: "just-a-placeholder-so-we-dont-get-warnings"

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # 1. Clean previous deployment
            sudo rm -rf /home/ubuntu/Astra
            mkdir -p /home/ubuntu/Astra/KYC
            cd /home/ubuntu/Astra/KYC

            # 2. Clone fresh code
            git clone https://github.com/${{ github.repository }}.git .

            # 3. Set up Conda (if not exists)
            if ! command -v conda &> /dev/null; then
              wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
              bash miniconda.sh -b -p $HOME/miniconda
              export PATH="$HOME/miniconda/bin:$PATH"
            fi
            eval "$(conda shell.bash hook)"
            conda init bash
            source ~/.bashrc
            conda activate kyc || (conda create -n kyc python=3.12.9 -y && conda activate kyc)

            # 4. Install dependencies
            pip install -r requirements_CPU.txt

            # 5. Restart FastAPI
            pkill -f "uvicorn main:app" || true
            nohup uvicorn main:app --host 0.0.0.0 --port 8080 > uvicorn.log 2>&1 &

            # 6. Verify deployment
            sleep 5
            curl -s http://localhost:8080 | grep "Welcome" || echo "Deployment failed!"
