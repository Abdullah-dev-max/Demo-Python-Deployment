name: Production Deployment

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          known_hosts: "just-a-placeholder"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_INSTANCE_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script_timeout: 45m
          script: |
            # 1. System preparation (matches manual setup)
            sudo apt-get update -y
            sudo apt-get install -y screen tmux
            sudo fallocate -l 4G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab

            # 2. Clean previous deployment (exact paths from history)
            sudo rm -rf /home/ubuntu/Astra
            mkdir -p /home/ubuntu/Astra/KYC
            cd /home/ubuntu/Astra/KYC

            # 3. Install Miniconda (same method)
            wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
            bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda
            export PATH="$HOME/miniconda/bin:$PATH"

            # 4. Create environment (specific Python version from history)
            conda create -n kyc python=3.12.9 -y
            source activate kyc

            # 5. Install core packages first (critical packages from history)
            pip install --no-cache-dir mediapipe faiss-cpu opencv-python

            # 6. Clone code (shallow clone)
            git clone --depth 1 https://github.com/${{ github.repository }}.git .

            # 7. Install remaining requirements
            pip install -r requirements_CPU.txt

            # 8. Verify model files exist
            if [ ! -f "models/facial_recognition_weights.pth" ]; then
              echo "Error: Model file missing!"
              exit 1
            fi

            # 9. Start server (nohup method from successful deployment)
            pkill -f "uvicorn main:app" || true
            nohup uvicorn main:app --host 0.0.0.0 --port 8080 > uvicorn.log 2>&1 &

            # 10. Configure log rotation (as done manually)
            echo "/home/ubuntu/Astra/KYC/uvicorn.log {
              rotate 7
              daily
              missingok
              compress
            }" | sudo tee /etc/logrotate.d/fastapi

            # 11. Final verification
            sleep 20
            if curl -s http://localhost:8080 | grep -q "Welcome"; then
              echo "Deployment successful!"
              echo "Uvicorn process:"
              pgrep -a uvicorn
            else
              echo "Deployment failed! Logs:"
              tail -50 uvicorn.log
              exit 1
            fi
