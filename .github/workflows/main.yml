name: Python CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Check GPU availability (Optional)
      run: |
        echo "Checking GPU availability..."
        if command -v nvidia-smi &> /dev/null; then
          nvidia-smi
          echo "GPU detected and working!"
        else
          echo "No GPU detected or nvidia-smi not available. Continuing without GPU..."
        fi

    - name: Install core dependencies manually
      run: |
        python -m pip install --upgrade pip
        # Install key dependencies from your requirements_GPU.txt
        pip install --extra-index-url https://download.pytorch.org/whl/cu126 torch==2.6.0 torchvision==0.21.0 torchaudio==2.6.0
        pip install fastapi uvicorn numpy==1.26.4 opencv-python==4.11.0.86 pillow matplotlib
        pip install mediapipe==0.10.21 qdrant-client requests pydantic==2.10.6
        pip install google-api-core google-auth google-cloud-vision
        pip install insightface==0.7.3 onnxruntime==1.22.0 paddleocr==2.10.0
        pip install scikit-image==0.25.2 scipy==1.15.2 python-dotenv jwt

    - name: Run tests (if you have any)
      run: |
        # Add your test commands here, for example:
        # python -m pytest tests/
        # or
        # python -m unittest discover
        echo "Running tests..."
        # Uncomment and modify based on your test setup
        # python -m pytest --verbose

    - name: Display Project Structure (Optional, for debugging)
      run: ls -R

  # Deploy job - runs only on push to main branch and after successful build
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Option 1: Deploy to AWS EC2 (using SSH)
    - name: Deploy to AWS EC2
      if: false  # Set to true if using this option
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USERNAME }}
        key: ${{ secrets.AWS_SSH_KEY }}
        port: ${{ secrets.AWS_PORT }}
        script: |
          cd /path/to/your/application
          git pull origin main
          pip install -r requirements_GPU.txt
          sudo systemctl restart your-app-service

    # Option 2: Deploy to Heroku
    - name: Deploy to Heroku
      if: false  # Set to true if using this option
      uses: akhileshns/heroku-deploy@v3.13.15
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "your-app-name"
        heroku_email: "your-email@example.com"

    # Option 3: Deploy to Google Cloud Platform
    - name: Deploy to GCP
      if: false  # Set to true if using this option
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true
    
    - name: Deploy to Google Cloud Run
      if: false  # Set to true if using this option
      run: |
        gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-name
        gcloud run deploy your-app-name \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/your-app-name \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated

    # Option 4: Deploy using Docker to any container registry
    - name: Build and push Docker image
      if: false  # Set to true if using this option
      run: |
        echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
        docker build -t your-username/your-app-name:latest .
        docker push your-username/your-app-name:latest

    # Option 5: Deploy to your own server via SSH
    - name: Deploy to Custom Server
      if: true  # Set to true if using this option
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          cd /path/to/your/application
          git pull origin main
          source venv/bin/activate  # If using virtual environment
          pip install -r requirements_GPU.txt
          # Restart your application service
          sudo systemctl restart your-fastapi-app
          # Or if using PM2:
          # pm2 restart your-app-name
          # Or if running with uvicorn directly:
          # pkill -f uvicorn && nohup uvicorn main:app --host 0.0.0.0 --port 8000 &

    # Option 6: Simple deployment notification
    - name: Deployment Success Notification
      if: success()
      run: |
        echo "ðŸš€ Deployment completed successfully!"
        echo "Application deployed to production environment"
        # You can add Slack/Discord notifications here
        # curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment successful!"}' ${{ secrets.SLACK_WEBHOOK }}
